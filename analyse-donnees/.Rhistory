quote = "\"", comment.char = "")
warnings()
warnings()
knitr::opts_chunk$set(echo = TRUE)
couleurs = c("orange", "green")
barplot(prop.table(table(heart$sexe, heart$coeur), margin = 2) * 100,
main = "Problème cardiaque en fonction du sexe",
sub = "les hommes semblent plus touchés par\n un problème cardique que les femmes.",
cex.sub = .8, font.sub = 3,
xlim = c(0, 3.5),
col = couleurs)
colors()
boxplot(Sepal.Length ~ Species, data = iris)
boxplot(Sepal.Length ~ Species, data = iris,
color = couleurs)
?boxplot
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs)
couleurs = c("orange", "seagreen", "steelblue")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs)
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)",
font.axis = 2)
?par
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)",
font.axis = 3)
par(mar = c(5, 2, 2, 0) + .1, font.axis = 3)
couleurs = c("orange", "seagreen", "steelblue")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)"
)
par(mar = c(2, 4, 2, 0) + .1, font.lab = 3)
couleurs = c("orange", "seagreen", "steelblue")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)"
)
par(mar = c(3, 4, 2, 0) + .1, font.lab = 3)
couleurs = c("orange", "seagreen", "steelblue")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)",
xlab = "Espèce"
)
par(mar = c(4, 4, 2, 0) + .1, font.lab = 3)
couleurs = c("orange", "seagreen", "steelblue")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)",
xlab = "Type d'iris"
)
par(mar = c(4, 4, 2, 0) + .1, font.lab = 3)
couleurs = c("orange", "seagreen", "steelblue")
boxplot(Sepal.Length ~ Species, data = iris,
col = couleurs,
main = "Influence de l'espèce sur le sépale",
ylab = "Longueur du sépale (en cm)",
xlab = "Type d'iris")
ls()
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)
library(FactoMineR)
library(tidyverse)
library(knitr)
wgi.m = read_csv("WGI_Data.csv", quote = '"') %>%
mutate_at("Value", funs(as.numeric))
setwd("~/GitHub/cours-2017-2018/analyse-donnees")
knitr::opts_chunk$set(echo = FALSE)
library(FactoMineR)
library(tidyverse)
library(knitr)
wgi.m = read_csv("WGI_Data.csv", quote = '"') %>%
mutate_at("Value", funs(as.numeric))
wgi = wgi.m %>%
select(`Country Name`, `Series Code`, Value) %>%
spread(`Series Code`, Value) %>%
na.omit()
knitr::kable(head(wgi))
d = dist(scale(wgi[-1]))
h_comp = hclust(d)
h_sing = hclust(d, method = "single")
h_ward = hclust(d, method = "ward.D2")
par(mfrow = c(1, 3), mar = c(2, 2, 2, 0) + .1)
plot(h_comp, hang = -1, labels = NULL, main = "Complet")
plot(h_sing, hang = -1, labels = NULL, main = "Simple")
plot(h_ward, hang = -1, labels = NULL, main = "Ward")
calcul <- function(df, h, k) {
z = cutree(h, k)
gk = apply(df, 2, tapply, z, mean)
g = apply(df, 2, mean)
I = sum(rowSums((df - matrix(g, nrow(df), ncol(df), byrow = T))**2))
if (k == 1) {
W = I
} else {
W = sum(rowSums((df - gk[z,])**2))
}
B = I - W
r2 = B / I
PsF = ((r2)/(k - 1))/((1 - r2)/(nrow(df) - k))
c(k = k, I = I, W = W, B = B, r2 = r2, PsF = ifelse(PsF == Inf, NA, PsF))
}
crit_comp = t(sapply(1:20, calcul, df = wgi[-1], h = h_comp))
crit_sing = t(sapply(1:20, calcul, df = wgi[-1], h = h_sing))
crit_ward = t(sapply(1:20, calcul, df = wgi[-1], h = h_ward))
par(mfrow = c(3, 2), mar = c(2, 2, 2, 0) + .1)
plot(r2 ~ k, data = crit_comp, type = "b", main = "R2 - Complet")
plot(PsF ~ k, data = crit_comp, type = "b", main = "PseudoF - Complet")
plot(r2 ~ k, data = crit_sing, type = "b", main = "R2 - Simple")
plot(PsF ~ k, data = crit_sing, type = "b", main = "PseudoF - Simple")
plot(r2 ~ k, data = crit_ward, type = "b", main = "R2 - Ward")
plot(PsF ~ k, data = crit_ward, type = "b", main = "PseudoF - Ward")
z_comp = cutree(h_comp, 4)
z_sing = cutree(h_sing, 5)
z_ward1 = cutree(h_ward, 2)
z_ward2 = cutree(h_ward, 4)
kable(apply(wgi[-1], 2, tapply, z_comp, mean))
kable(apply(wgi[-1], 2, tapply, z_sing, mean))
kable(apply(wgi[-1], 2, tapply, z_ward1, mean))
kable(apply(wgi[-1], 2, tapply, z_ward2, mean))
couleurs = c("orange", "steelblue", "red", "green2")
par(mfrow = c(2, 2), mar = c(2, 2, 2, 0) + .1)
acp = PCA(wgi[-1], graph = FALSE)
plot(acp$ind$coord, col = couleurs[z_comp],
pch = 19, main = "complet")
plot(acp$ind$coord, col = couleurs[z_sing],
pch = 19, main = "simple")
plot(acp$ind$coord, col = couleurs[z_ward1],
pch = 19, main = "ward k = 2")
plot(acp$ind$coord, col = couleurs[z_ward2],
pch = 19, main = "ward k = 4")
presentation_classe <- function(df, z, k) {
cat("Classe 1 :\n")
kable(apply(df[z==k,-1], 2, mean))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("Classe 1 :\n")
kable(data.frame(apply(df[z==k,-1], 2, mean)))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("Classe 1 :\n")
print(kable(data.frame(apply(df[z==k,-1], 2, mean))))
}
presentation_classe(wgi, z_ward2, 1)
wgi %>% mutate(classe = z_ward2) %>% filter(classe == 1) %>% summarise_all(fun(mean))
wgi %>% mutate(classe = z_ward2) %>% filter(classe == 1) %>% summarise_all(funs(mean))
wgi %>% mutate(classe = z_ward2) %>% %>% select(-1) %>% filter(classe == 1) %>% summarise_all(funs(mean))
wgi %>% mutate(classe = z_ward2) %>% select(-1) %>% filter(classe == 1) %>% summarise_all(funs(mean))
presentation_classe <- function(df, z, k) {
cat("Classe :", k, "\n")
kable(df %>% mutate(classe = z) %>% select(-1) %>% filter(classe == k) %>% summarise_all(funs(mean)))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n")
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n")
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
unlist(df %>% select(1))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n")
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
c(df %>% select(1))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n")
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
cat((df %>% select(1))$`Country Name`)
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n")
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
cat(paste((df %>% select(1))$`Country Name`, collapse = ", "))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n",
paste((df %>% select(1))$`Country Name`, collapse = ", "))
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
}
presentation_classe(wgi, z_ward2, 1)
presentation_classe <- function(df, z, k) {
cat("- Classe :", k, "\n",
paste((df %>% select(1))$`Country Name`, collapse = "; "))
df = df %>% mutate(classe = z) %>% filter(classe == k)
kable(df %>% select(-1) %>% summarise_all(funs(mean)))
}
presentation_classe(wgi, z_ward2, 1)
acp$eig
a_acp = hclust(dist(acp$ind$coord[,1:2]), method = "ward.D2")
plot(a_acp, hang = -1, labels = NULL, main = "sur ACP")
par(mar = c(2, 2, 2, 0) + .1)
a_acp = hclust(dist(acp$ind$coord[,1:2]), method = "ward.D2")
plot(a_acp, hang = -1, labels = FALSE, main = "sur ACP")
knitr::opts_chunk$set(echo = FALSE)
library(FactoMineR)
library(tidyverse)
library(knitr)
wgi.m = read_csv("WGI_Data.csv", quote = '"') %>%
mutate_at("Value", funs(as.numeric))
wgi = wgi.m %>%
select(`Country Name`, `Series Code`, Value) %>%
spread(`Series Code`, Value) %>%
na.omit()
knitr::kable(head(wgi))
d = dist(scale(wgi[-1]))
h_comp = hclust(d)
h_sing = hclust(d, method = "single")
h_ward = hclust(d, method = "ward.D2")
par(mfrow = c(1, 3), mar = c(2, 2, 2, 0) + .1)
plot(h_comp, hang = -1, labels = NULL, main = "Complet")
plot(h_sing, hang = -1, labels = NULL, main = "Simple")
plot(h_ward, hang = -1, labels = NULL, main = "Ward")
calcul <- function(df, h, k) {
z = cutree(h, k)
gk = apply(df, 2, tapply, z, mean)
g = apply(df, 2, mean)
I = sum(rowSums((df - matrix(g, nrow(df), ncol(df), byrow = T))**2))
if (k == 1) {
W = I
} else {
W = sum(rowSums((df - gk[z,])**2))
}
B = I - W
r2 = B / I
PsF = ((r2)/(k - 1))/((1 - r2)/(nrow(df) - k))
c(k = k, I = I, W = W, B = B, r2 = r2, PsF = ifelse(PsF == Inf, NA, PsF))
}
crit_comp = t(sapply(1:20, calcul, df = wgi[-1], h = h_comp))
crit_sing = t(sapply(1:20, calcul, df = wgi[-1], h = h_sing))
crit_ward = t(sapply(1:20, calcul, df = wgi[-1], h = h_ward))
par(mfrow = c(3, 2), mar = c(2, 2, 2, 0) + .1)
plot(r2 ~ k, data = crit_comp, type = "b", main = "R2 - Complet")
plot(PsF ~ k, data = crit_comp, type = "b", main = "PseudoF - Complet")
plot(r2 ~ k, data = crit_sing, type = "b", main = "R2 - Simple")
plot(PsF ~ k, data = crit_sing, type = "b", main = "PseudoF - Simple")
plot(r2 ~ k, data = crit_ward, type = "b", main = "R2 - Ward")
plot(PsF ~ k, data = crit_ward, type = "b", main = "PseudoF - Ward")
z_comp = cutree(h_comp, 4)
z_sing = cutree(h_sing, 5)
z_ward1 = cutree(h_ward, 2)
z_ward2 = cutree(h_ward, 4)
kable(apply(wgi[-1], 2, tapply, z_comp, mean))
kable(apply(wgi[-1], 2, tapply, z_sing, mean))
kable(apply(wgi[-1], 2, tapply, z_ward1, mean))
kable(apply(wgi[-1], 2, tapply, z_ward2, mean))
couleurs = c("orange", "steelblue", "red", "green2")
par(mfrow = c(2, 2), mar = c(2, 2, 2, 0) + .1)
acp = PCA(wgi[-1], graph = FALSE)
plot(acp$ind$coord, col = couleurs[z_comp],
pch = 19, main = "complet")
plot(acp$ind$coord, col = couleurs[z_sing],
pch = 19, main = "simple")
plot(acp$ind$coord, col = couleurs[z_ward1],
pch = 19, main = "ward k = 2")
plot(acp$ind$coord, col = couleurs[z_ward2],
pch = 19, main = "ward k = 4")
presentation_classe <- function(df, z, k) {
df = df %>% mutate(classe = z) %>% filter(classe == k) %>% select(-classe)
cat("- Classe ", k, " : ",
paste((df %>% select(1))$`Country Name`, collapse = "; "),
"\n")
print(kable(df %>% select(-1) %>% summarise_all(funs(mean))))
cat("\n")
}
for (l in 1:4)
presentation_classe(wgi, z_ward2, l)
par(mar = c(2, 2, 2, 0) + .1, mfrow = c(1, 2))
h_acp = hclust(dist(acp$ind$coord[,1:2]), method = "ward.D2")
crit_acp = t(sapply(1:20, calcul, df = wgi[-1], h = h_acp))
z_acp = cutree(h_acp, 2)
plot(h_acp, hang = -1, labels = FALSE, main = "sur ACP")
plot(acp$ind$coord, col = couleurs[])
par(mar = c(2, 2, 2, 0) + .1, mfrow = c(2, 2))
h_acp = hclust(dist(acp$ind$coord[,1:2]), method = "ward.D2")
crit_acp = t(sapply(1:20, calcul, df = wgi[-1], h = h_acp))
plot(r2 ~ k, data = crit_acp, type = "b", main = "R2")
plot(PsF ~ k, data = crit_acp, type = "b", main = "PseudoF")
z_acp = cutree(h_acp, 2)
plot(h_acp, hang = -1, labels = FALSE, main = "sur ACP")
plot(acp$ind$coord, col = couleurs[z_acp], pch = 19)
acp$eig
par(mar = c(2, 2, 2, 0) + .1, mfrow = c(2, 2))
h_acp = hclust(dist(acp$ind$coord[,1:3]), method = "ward.D2")
crit_acp = t(sapply(1:20, calcul, df = wgi[-1], h = h_acp))
plot(r2 ~ k, data = crit_acp, type = "b", main = "R2")
plot(PsF ~ k, data = crit_acp, type = "b", main = "PseudoF")
z_acp = cutree(h_acp, 2)
plot(h_acp, hang = -1, labels = FALSE, main = "sur ACP")
plot(acp$ind$coord, col = couleurs[z_acp], pch = 19)
par(mar = c(2, 2, 2, 0) + .1, mfrow = c(2, 2))
h_acp = hclust(dist(acp$ind$coord[,1:3]), method = "ward.D2")
crit_acp = t(sapply(1:20, calcul, df = wgi[-1], h = h_acp))
plot(r2 ~ k, data = crit_acp, type = "b", main = "R2")
plot(PsF ~ k, data = crit_acp, type = "b", main = "PseudoF")
z_acp = cutree(h_acp, 4)
plot(h_acp, hang = -1, labels = FALSE, main = "sur ACP")
plot(acp$ind$coord, col = couleurs[z_acp], pch = 19)
table(z_ward2, z_acp)
as.data.frame(table(z_ward2, z_acp))
as.matrix(table(z_ward2, z_acp))
data.frame(as.matrix(table(z_ward2, z_acp)))
as.data.frame(as.matrix(table(z_ward2, z_acp)))
t = table(z_ward2, z_acp)
t %>% data.frame() %>%
spread(a, b)
t = table(z_ward2, z_acp)
t %>% data.frame() %>%
spread(z_acp, Freq)
t %>% data.frame() %>%
spread(z_acp, Freq)
t %>% data.frame() %>%
spread(z_acp, Freq)
?spread
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, col = Freq)) +
geom_bin2d()
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, col = Freq)) +
geom_bin2d(stat = "identity")
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity")
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity") +
scale_fill_continuous(low = "white", high = "steelblue")
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity") +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic()
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity") +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP",
fill = "Occurences")
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity") +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP",
fill = "")
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity") +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP",
fill = "") +
geom_text(aes(label= Freq))
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity", show.legend = FALSE) +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP") +
geom_text(aes(label= Freq))
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity", show.legend = FALSE) +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP") +
geom_text(aes(label = ifelse(Freq == 0, "", Freq)))
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity", show.legend = FALSE) +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP") +
geom_text(aes(label = ifelse(Freq == 0, "", Freq))) +
theme(axis.line = element_blank())
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity", show.legend = FALSE) +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_void() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP") +
geom_text(aes(label = ifelse(Freq == 0, "", Freq)))
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity", show.legend = FALSE) +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP") +
geom_text(aes(label = ifelse(Freq == 0, "", Freq))) +
theme(axis.line = element_blank(),
axis.text = element_blank())
t %>% data.frame() %>%
ggplot(aes(z_ward2, z_acp, fill = Freq)) +
geom_bin2d(stat = "identity", show.legend = FALSE) +
scale_fill_continuous(low = "white", high = "steelblue") +
theme_classic() +
labs(x = "Ward sur données initiales",
y = "Ward sur axes ACP") +
geom_text(aes(label = ifelse(Freq == 0, "", Freq))) +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
wgi %>% mutate(classe = z_ward2)
wgi %>% mutate(classe = z_ward2)
wgi %>% mutate(classe = z_ward2) %>% gather()
?gather
wgi %>% mutate(classe = z_ward2) %>% gather(`Country Name`)
wgi %>% mutate(classe = z_ward2) %>% gather(key = `Country Name`)
View(wgi)
dim(wgi)
dim(wgi %>% select(`Country Name`) %>% distinct())
wgi %>% mutate(classe = z_ward2) %>% gather(a, b, -`Country Name`)
wgi %>% mutate(classe = z_ward2) %>% gather(var, val, -`Country Name`)
wgi %>%
mutate(classe = z_ward2) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val)) +
geom_boxplot()
wgi %>%
mutate(classe = z_ward2) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(factor(classe), val)) +
geom_boxplot()
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val)) +
geom_boxplot()
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val, fill = classe)) +
geom_boxplot()
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val, fill = classe)) +
geom_boxplot() +
facet_wrap(~ var)
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val, fill = classe)) +
geom_boxplot() +
scale_fill_manual(values = couleurs) +
facet_wrap(~ var) +
theme_classic()
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val, fill = classe)) +
geom_boxplot() +
scale_fill_manual(values = couleurs) +
facet_wrap(~ var) +
theme_classic() +
theme(axis.title.x = element_blank())
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val, fill = classe)) +
geom_boxplot(show.legend = FALSE) +
scale_fill_manual(values = couleurs) +
facet_wrap(~ var) +
theme_classic() +
theme(axis.title.x = element_blank())
wgi %>%
mutate(classe = factor(z_ward2)) %>%
gather(var, val, -`Country Name`, -classe) %>%
ggplot(aes(classe, val, fill = classe)) +
geom_boxplot(show.legend = FALSE) +
scale_fill_manual(values = couleurs) +
facet_wrap(~ var) +
theme_classic() +
theme(axis.title = element_blank())
